[{"/home/birbal/Documents/Projects/corona-tracker/src/index.js":"1","/home/birbal/Documents/Projects/corona-tracker/src/App.js":"2","/home/birbal/Documents/Projects/corona-tracker/src/components/index.js":"3","/home/birbal/Documents/Projects/corona-tracker/src/components/Chart/Chart.jsx":"4","/home/birbal/Documents/Projects/corona-tracker/src/components/Cards/Cards.jsx":"5","/home/birbal/Documents/Projects/corona-tracker/src/components/CountryPicker/CountryPicker.jsx":"6","/home/birbal/Documents/Projects/corona-tracker/src/api/index.js":"7"},{"size":148,"mtime":1610130462522,"results":"8","hashOfConfig":"9"},{"size":742,"mtime":1613724944325,"results":"10","hashOfConfig":"9"},{"size":175,"mtime":1610130462522,"results":"11","hashOfConfig":"9"},{"size":1050,"mtime":1613720560046,"results":"12","hashOfConfig":"9"},{"size":2759,"mtime":1613716621710,"results":"13","hashOfConfig":"9"},{"size":824,"mtime":1613725352483,"results":"14","hashOfConfig":"9"},{"size":1094,"mtime":1613723335503,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1egoeyp",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"/home/birbal/Documents/Projects/corona-tracker/src/index.js",[],["34","35"],"/home/birbal/Documents/Projects/corona-tracker/src/App.js",[],"/home/birbal/Documents/Projects/corona-tracker/src/components/index.js",[],"/home/birbal/Documents/Projects/corona-tracker/src/components/Chart/Chart.jsx",["36"],"import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\n\nimport styles from \"./Chart.module.css\";\n\nconst Chart = () => {\n  const [dailyData, setDailyData] = useState([]);\n\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n    fetchAPI();\n  });\n\n  const lineChart = dailyData.length ? (\n    <Line\n      data={{\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            data: dailyData.map(({ confirmed }) => confirmed),\n            label: \"Infected\",\n            borderColor: \"#3333ff\",\n            fill: true,\n          },\n          {\n            data: dailyData.map(({ deaths }) => deaths),\n            label: \"Deaths\",\n            borderColor: \"#red\",\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\n            fill: true,\n          },\n        ],\n      }}\n    />\n  ) : null;\n\n  return <div className={styles.container}>{lineChart}</div>;\n};\n\nexport default Chart;\n","/home/birbal/Documents/Projects/corona-tracker/src/components/Cards/Cards.jsx",[],["37","38"],"/home/birbal/Documents/Projects/corona-tracker/src/components/CountryPicker/CountryPicker.jsx",[],"/home/birbal/Documents/Projects/corona-tracker/src/api/index.js",["39"],"import axios from \"axios\";\nimport CountryPicker from \"../components/CountryPicker/CountryPicker\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async () => {\n  try {\n    const {\n      data: { confirmed, recovered, deaths, lastUpdate },\n    } = await axios.get(url);\n    const modifiedData = {\n      confirmed: confirmed,\n      recovered: recovered,\n      deaths: deaths,\n      lastUpdate: lastUpdate,\n    };\n    return modifiedData;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n    const modifiedData = data.map((dailyData) => ({\n      confirmed: dailyData.confirmed.total,\n      deaths: dailyData.deaths.total,\n      date: dailyData.reportDate,\n    }));\n    return modifiedData;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`${url}/countries`);\n    return countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":3,"column":16,"nodeType":"46","messageId":"47","endLine":3,"endColumn":19},{"ruleId":"40","replacedBy":"48"},{"ruleId":"42","replacedBy":"49"},{"ruleId":"44","severity":1,"message":"50","line":2,"column":8,"nodeType":"46","messageId":"47","endLine":2,"endColumn":21},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'Bar' is defined but never used.","Identifier","unusedVar",["51"],["52"],"'CountryPicker' is defined but never used.","no-global-assign","no-unsafe-negation"]